import os, sys, json
package_root = r'/home/clqin/work/aesp/aesp/examples/EMT-Al-3D-local/std-sp-0pta8/scheduler-gen--g1/workdir/tmp/inputs/artifacts/dflow_python_packages'
catalog_dir = os.path.join(package_root, '.dflow')
if os.path.exists(catalog_dir):
    for f in os.listdir(catalog_dir):
        with open(os.path.join(catalog_dir, f), 'r') as fd:
            for item in json.load(fd)['path_list']:
                path = os.path.join(package_root, os.path.dirname(item['dflow_list_item']))
                sys.path.insert(0, path)
                os.environ['PYTHONPATH'] = path + ':' + os.environ.get('PYTHONPATH', '')
import json
from dflow import config, jsonpickle, s3_config
config.update(jsonpickle.loads(r'''{"host": "https://127.0.0.1:2746", "namespace": "argo", "token": null, "k8s_config_file": null, "k8s_api_server": null, "private_key_host_path": null, "save_path_as_parameter": false, "catalog_dir_name": ".dflow", "archive_mode": "tar", "util_image": "python:3.8", "util_image_pull_policy": null, "extender_image": "dptechnology/dflow-extender", "extender_image_pull_policy": null, "dispatcher_image": "dptechnology/dpdispatcher", "dispatcher_image_pull_policy": null, "save_keys_in_global_outputs": false, "mode": "debug", "lineage": null, "register_tasks": false, "http_headers": {}, "workflow_annotations": {}, "overwrite_reused_artifact": true, "detach": false, "debug_copy_method": "symlink", "debug_pool_workers": null, "debug_batch_size": null, "debug_batch_interval": 30, "detect_empty_dir": true, "artifact_register": {}, "debug_s3": false, "debug_workdir": ".", "debug_artifact_dir": ".", "debug_failfast": false, "debug_save_copy_method": "symlink", "raise_for_group": false, "dispatcher_debug": false, "dereference_symlink": false}'''))
s3_config.update(jsonpickle.loads(r'''{"endpoint": "127.0.0.1:9000", "console": "http://127.0.0.1:9001", "access_key": "admin", "secret_key": "password", "secure": false, "bucket_name": "my-bucket", "repo_key": null, "repo": null, "repo_type": "s3", "repo_prefix": "", "prefix": "", "storage_client": null, "extra_prefixes": []}'''))

import os, sys, traceback
from dflow.python import OPIO, TransientError, FatalError
from dflow.python.utils import handle_input_artifact, handle_input_parameter
from dflow.python.utils import handle_output_artifact, handle_output_parameter, handle_lineage
from aesp.workflow.op.scheduler import SchedulerGen

op_obj = SchedulerGen()
op_obj.key = 'scheduler-gen--g1'
if op_obj.key.startswith('{'): op_obj.key = None
op_obj.workflow_name = 'std-sp-0pta8'
if __name__ == '__main__':
    input = OPIO()
    input_sign = SchedulerGen.get_input_sign()
    output_sign = SchedulerGen.get_output_sign()
    input['scheduler'] = handle_input_parameter('scheduler', r'''{"py/object": "aesp.func.scheduler.STScheduler", "stage": 2, "generation": 1, "max_stage": 1, "max_generation": 10}''', input_sign['scheduler'], None, r'/home/clqin/work/aesp/aesp/examples/EMT-Al-3D-local/std-sp-0pta8/scheduler-gen--g1/workdir/tmp')
    input['db'] = handle_input_artifact('db', input_sign['db'], None, r'/home/clqin/work/aesp/aesp/examples/EMT-Al-3D-local/std-sp-0pta8/scheduler-gen--g1/workdir/tmp', None, n_parts=None, keys_of_parts=None, prefix=None)
    input['opt_params_config'] = handle_input_parameter('opt_params_config', r'''[{"generation": {"adaptive": {"size_change_ratio": 0.5}, "gen_size": 50}, "population": {"adaptive": {"size_change_ratio": 0.5}, "pop_size": 40}, "operator": {"type": "bulk", "generator": {"random_gen_params": {"composition": {"Al": 8}, "spgnum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "factor": 1, "thickness": null, "max_count": 50}, "prob": 0.33, "random_gen_prob": 1}, "mutation": {"strain_mut_params": {"stddev": 0.1, "max_count": 100}, "permutation_mut_params": {"max_count": 100}, "ripple_mut_params": {"max_count": 100, "miu": 2, "rho": 0.3, "eta": 1}, "continuous_mut_factor": 1, "prob": 0.34, "strain_mut_prob": 0.33, "permutation_mut_prob": 0.33, "ripple_mut_prob": 0.34}, "crossover": {"plane_cross_params": {"stddev": 0.1, "max_count": 100}, "sphere_cross_params": {"stddev": 0.1, "max_count": 100}, "cylinder_cross_params": {"stddev": 0.1, "max_count": 100}, "prob": 0.33, "plane_cross_prob": 0.33, "sphere_cross_prob": 0.33, "cylinder_cross_prob": 0.34}, "adaptive": {"type": "adjustment", "factor": 0.5, "use_recent_gen": 2}, "hard_constrains": {"tol_matrix": {"tuples": null, "prototype": "atomic", "factor": 1.0}, "alpha": [20, 160], "beta": [20, 160], "gamma": [20, 160], "chi": [20, 160], "psi": [20, 160], "phi": [20, 160], "a": [0, 100], "b": [0, 100], "c": [0, 100]}}, "cvg_criterion": {"max_gen_num": 10, "continuous_opt_num": null}, "type": "std", "seeds": null}]''', input_sign['opt_params_config'], None, r'/home/clqin/work/aesp/aesp/examples/EMT-Al-3D-local/std-sp-0pta8/scheduler-gen--g1/workdir/tmp')
    input['generation'] = handle_input_parameter('generation', r'''1''', input_sign['generation'], None, r'/home/clqin/work/aesp/aesp/examples/EMT-Al-3D-local/std-sp-0pta8/scheduler-gen--g1/workdir/tmp')
    input['info'] = handle_input_parameter('info', r'''{}''', input_sign['info'], None, r'/home/clqin/work/aesp/aesp/examples/EMT-Al-3D-local/std-sp-0pta8/scheduler-gen--g1/workdir/tmp')
    op_obj.tmp_root = '/home/clqin/work/aesp/aesp/examples/EMT-Al-3D-local/std-sp-0pta8/scheduler-gen--g1/workdir/tmp'
    op_obj.create_slice_dir = False
    op_obj.slices['generation'] = None
    op_obj.slices['scheduler'] = None
    op_obj.slices['g_converged'] = None
    op_obj.slices['opt_params_config'] = None
    op_obj.slices['info'] = None
    op_obj.slices['db'] = None
    op_obj.pool_size = None
    import signal
    def sigterm_handler(signum, frame):
        print('Got SIGTERM')
        raise RuntimeError('Got SIGTERM')
    signal.signal(signal.SIGTERM, sigterm_handler)
    try:
        try:
            output = op_obj.execute(input)
        except Exception as e:
            if op_obj.outputs:
                op_obj.handle_outputs(op_obj.outputs)
            raise e
    except TransientError:
        traceback.print_exc()
        sys.exit(1)
    except FatalError:
        traceback.print_exc()
        sys.exit(2)
    op_obj.handle_outputs(output)
